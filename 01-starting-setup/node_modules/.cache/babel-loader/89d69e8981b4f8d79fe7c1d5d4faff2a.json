{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beadi\\\\Desktop\\\\Programming\\\\Web Dev\\\\React\\\\027 01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const yearSelectHandler = selection => {\n    setFilteredYear(selection); // console.log(\"Expenses.js\");\n    // console.log(selection);\n  };\n\n  const filteredExpenses = props.items.filter(filteredExpense => filteredExpense.date.getFullYear().toString() === filteredYear);\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: filteredYear,\n        onYearSelect: yearSelectHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n} // NOTE: If we use &&, then if the left condition is true then the right code gets returned. (This maybe used in place of conditionals)\n\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/beadi/Desktop/Programming/Web Dev/React/027 01-starting-setup/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpenseFilter","Card","Expenses","props","filteredYear","setFilteredYear","yearSelectHandler","selection","filteredExpenses","items","filter","filteredExpense","date","getFullYear","toString","expensesContent","length","map","expense","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,iBAAiB,GAAIC,SAAD,IAAe;AACvCF,IAAAA,eAAe,CAACE,SAAD,CAAf,CADuC,CAEvC;AACA;AACD,GAJD;;AAMA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CACtBC,eAAD,IACEA,eAAe,CAACC,IAAhB,CAAqBC,WAArB,GAAmCC,QAAnC,OAAkDV,YAF7B,CAAzB;;AAKA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAGP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA7B,EAA+B;AAC7BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBC,OAAD,iBACrC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACC,KAFjB;AAGE,MAAA,MAAM,EAAED,OAAO,CAACE,MAHlB;AAIE,MAAA,IAAI,EAAEF,OAAO,CAACN;AAJhB,OACOM,OAAO,CAACG,EADf;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,QAAQ,EAAEjB,YADZ;AAEE,QAAA,YAAY,EAAEE;AAFhB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGS,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,C,CAED;;;GAxCSb,Q;;KAAAA,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const yearSelectHandler = (selection) => {\r\n    setFilteredYear(selection);\r\n    // console.log(\"Expenses.js\");\r\n    // console.log(selection);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(\r\n    (filteredExpense) =>\r\n      filteredExpense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  let expensesContent = <p>No expenses found.</p>;\r\n\r\n  if(filteredExpenses.length > 0){\r\n    expensesContent = filteredExpenses.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selected={filteredYear}\r\n          onYearSelect={yearSelectHandler}\r\n        />\r\n        {expensesContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n// NOTE: If we use &&, then if the left condition is true then the right code gets returned. (This maybe used in place of conditionals)\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}